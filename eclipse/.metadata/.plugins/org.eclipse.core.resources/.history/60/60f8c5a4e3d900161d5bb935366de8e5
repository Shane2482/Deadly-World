package shane2482.deadlyworld.render;

import java.util.Calendar;
import java.util.Random;

import org.lwjgl.opengl.GL11;

import com.google.common.primitives.SignedBytes;

import net.minecraft.block.Block;
import net.minecraft.block.BlockChest;
import net.minecraft.block.state.IBlockState;
import net.minecraft.client.Minecraft;
import net.minecraft.client.model.ModelChest;
import net.minecraft.client.model.ModelLargeChest;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.entity.RenderEntityItem;
import net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer;
import net.minecraft.entity.item.EntityItem;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.tileentity.TileEntityChest;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;
import shane2482.deadlyworld.Reference;
import shane2482.deadlyworld.init.ModBlocks;
import shane2482.deadlyworld.wip.tile.TileEntityBasaltChest;
import shane2482.deadlyworld.wip.tile.TileEntityPlywoodChest;

@SideOnly(Side.CLIENT)
public class BasaltChestRenderer extends TileEntitySpecialRenderer<TileEntityBasaltChest> {
	
	private static final ResourceLocation Basalt_Chest = new ResourceLocation(
			Reference.MOD_ID + ":" + "textures/entity/chest/basalt_chest.png");
	 private Random random;
	    private RenderEntityItem itemRenderer;
	    private ModelChest model;

	    private static float[][] shifts = { { 0.3F, 0.45F, 0.3F }, { 0.7F, 0.45F, 0.3F }, { 0.3F, 0.45F, 0.7F }, { 0.7F, 0.45F, 0.7F }, { 0.3F, 0.1F, 0.3F },
	            { 0.7F, 0.1F, 0.3F }, { 0.3F, 0.1F, 0.7F }, { 0.7F, 0.1F, 0.7F }, { 0.5F, 0.32F, 0.5F }, };

	    
	    private static final EntityItem ITEM = new EntityItem(Minecraft.getMinecraft().theWorld, 0, 0, 0, new ItemStack(Item.getItemFromBlock(ModBlocks.Basalt_Chest)));
	    
	    public BasaltChestRenderer()
	    {
	        model = new ModelChest();
	        random = new Random();
	        
	    }

	    public void render(TileEntityBasaltChest tile, double x, double y, double z, float partialTick, int breakStage)
	    {
	    	super.renderTileEntityAt(tile, x, y, z, partialTick, breakStage);
	    	
	    	Minecraft.getMinecraft().getRenderManager().doRenderEntity(ITEM, x, y, z, 0, partialTick, false);
	    	
	        if (tile == null) {
	            return;
	        }
	        int facing = 3;
	       

	        if (tile != null && tile.hasWorldObj() && tile.getWorld().getBlockState(tile.getPos()).getBlock() == ModBlocks.Basalt_Chest) {
	            facing = tile.getFacing();
	            
	            IBlockState state = tile.getWorld().getBlockState(tile.getPos());
	          
	        }

	        if (breakStage >= 0)
	        {
	            bindTexture(DESTROY_STAGES[breakStage]);
	            GlStateManager.matrixMode(5890);
	            GlStateManager.pushMatrix();
	            GlStateManager.scale(4.0F, 4.0F, 1.0F);
	            GlStateManager.translate(0.0625F, 0.0625F, 0.0625F);
	            GlStateManager.matrixMode(5888);
	        } else
	            bindTexture(Basalt_Chest);
	        GlStateManager.pushMatrix();
	       
	            GlStateManager.disableCull();
	        GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
	        GlStateManager.translate((float) x, (float) y + 1.0F, (float) z + 1.0F);
	        GlStateManager.scale(1.0F, -1F, -1F);
	        GlStateManager.translate(0.5F, 0.5F, 0.5F);
	        int k = 0;
	        if (facing == 2) {
	            k = 180;
	        }
	        if (facing == 3) {
	            k = 0;
	        }
	        if (facing == 4) {
	            k = 90;
	        }
	        if (facing == 5) {
	            k = -90;
	        }
	        GlStateManager.rotate(k, 0.0F, 1.0F, 0.0F);
	        GlStateManager.translate(-0.5F, -0.5F, -0.5F);
	        float lidangle = tile.prevLidAngle + (tile.lidAngle - tile.prevLidAngle) * partialTick;
	        lidangle = 1.0F - lidangle;
	        lidangle = 1.0F - lidangle * lidangle * lidangle;
	        model.chestLid.rotateAngleX = -((lidangle * 3.141593F) / 2.0F);
	        // Render the chest itself
	        model.renderAll();
	        if (breakStage >= 0)
	        {
	            GlStateManager.matrixMode(5890);
	            GlStateManager.popMatrix();
	            GlStateManager.matrixMode(5888);
	        }
	        
	            GlStateManager.enableCull();
	        GlStateManager.popMatrix();
	        GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);

	        if (tile.getDistanceSq(this.rendererDispatcher.entityX, this.rendererDispatcher.entityY, this.rendererDispatcher.entityZ) < 128d) {
	            random.setSeed(254L);
	            float shiftX;
	            float shiftY;
	            float shiftZ;
	            int shift = 0;
	            float blockScale = 0.70F;
	            float timeD = (float) (360.0 * (double) (System.currentTimeMillis() & 0x3FFFL) / (double) 0x3FFFL);
	           
	            GlStateManager.pushMatrix();
	            GlStateManager.translate((float) x, (float) y, (float) z);
	            EntityItem customitem = new EntityItem(this.getWorld());
	            customitem.hoverStart = 0f;
	           
	            GlStateManager.popMatrix();
	        }
	    }

	    public void renderTileEntityAt(TileEntityBasaltChest tileentity, double x, double y, double z, float partialTick, int breakStage)
	    {
	        render(tileentity, x, y, z, partialTick, breakStage);
	    }
	}