package shane2482.deadlyworld.gui;

import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.inventory.GuiContainer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.resources.I18n;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.inventory.Container;
import net.minecraft.inventory.ContainerChest;
import net.minecraft.inventory.IInventory;
import net.minecraft.util.ResourceLocation;
import shane2482.deadlyworld.Reference;
import shane2482.deadlyworld.container.container_Plywood_Deep_Crate;
import shane2482.deadlyworld.tiles.tileentity_plywood_deep_crate;

public class gui_Plywood_Deep_Crate extends GuiContainer{
	private static final ResourceLocation PlywoodInv = new ResourceLocation(Reference.MOD_ID + ":" + "textures/gui/container/Plywood_Chest_Gui.png");
	private final IInventory playerInv;
    private final IInventory chestInv;
    private final int inventoryRows;

    public gui_Plywood_Deep_Crate(IInventory playerInv, IInventory chestInv)
    {
        super(new container_Plywood_Deep_Crate(playerInv, chestInv, Minecraft.getMinecraft().thePlayer));
        this.playerInv = playerInv;
        this.chestInv = chestInv;
        this.allowUserInput = false;
		int i = 222;
		int j = 114;
		this.inventoryRows = chestInv.getSizeInventory() / 9;
		this.ySize = 114 + this.inventoryRows * 18;
       
    }

    @Override
    public void onGuiClosed() {
    	super.onGuiClosed();
    }
    @Override
    protected void drawGuiContainerForegroundLayer(int mouseX, int mouseY)
    {
        this.fontRendererObj.drawString(I18n.format("container.crafting", new Object[0]), 28, 6, 4210752);
        this.fontRendererObj.drawString(I18n.format("container.inventory", new Object[0]), 8, this.ySize - 96 + 2, 4210752);
    }
    @Override
    protected void drawGuiContainerBackgroundLayer(float partialTicks, int mouseX, int mouseY)
    {
        GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
        this.mc.getTextureManager().bindTexture(PlywoodInv);
        int i = (this.width - this.xSize) / 2;
        int j = (this.height - this.ySize) / 2;
        this.drawTexturedModalRect(i, j, 0, 0, this.xSize, this.ySize);
    }

}
