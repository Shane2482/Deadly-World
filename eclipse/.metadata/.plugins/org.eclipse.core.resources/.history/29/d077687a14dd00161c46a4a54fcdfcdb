package shane2482.deadlyworld.gui;

import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.inventory.GuiContainer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.resources.I18n;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.player.InventoryPlayer;
import net.minecraft.inventory.Container;
import net.minecraft.inventory.ContainerChest;
import net.minecraft.inventory.IInventory;
import net.minecraft.util.ResourceLocation;
import shane2482.deadlyworld.Reference;
import shane2482.deadlyworld.container.container_Plywood_Deep_Crate;
import shane2482.deadlyworld.tiles.tileentity_plywood_deep_crate;

public class gui_Plywood_Deep_Crate extends GuiContainer{
	private static final ResourceLocation PlywoodInv = new ResourceLocation(Reference.MOD_ID + ":" + "textures/gui/container/Plywood_Crate_Gui.png");
	private tileentity_plywood_deep_crate tileEntityInventoryBasic;

	public gui_Plywood_Deep_Crate(InventoryPlayer invPlayer, tileentity_plywood_deep_crate tile) {
		super(new container_Plywood_Deep_Crate(invPlayer, tile));
		tileEntityInventoryBasic = tile;
		// Set the width and height of the gui.  Should match the size of the texture!
		xSize = 256;
		ySize = 256;
	}

	// draw the background for the GUI - rendered first
	@Override
	protected void drawGuiContainerBackgroundLayer(float partialTicks, int x, int y) {
		// Bind the image texture of our custom container
		Minecraft.getMinecraft().getTextureManager().bindTexture(PlywoodInv);
		// Draw the image
		GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
		drawTexturedModalRect(guiLeft, guiTop, 0, 0, xSize, ySize);
	}

	// draw the foreground for the GUI - rendered after the slots, but before the dragged items and tooltips
	// renders relative to the top left corner of the background
	/**@Override
	protected void drawGuiContainerForegroundLayer(int mouseX, int mouseY) {
		final int LABEL_XPOS = 5;
		final int LABEL_YPOS = 5;
		fontRendererObj.drawString("Drawer", LABEL_XPOS, LABEL_YPOS, Color.BLACK.getRGB());
	}**/
}