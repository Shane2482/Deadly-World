package shane2482.deadlyworld.blocks.machines.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelAlloyFurnace extends ModelBase {
	 //fields
    ModelRenderer Top;
    ModelRenderer Bottom;
    ModelRenderer Left;
    ModelRenderer Right;
    ModelRenderer Back;
    ModelRenderer Center;
    ModelRenderer Center2;
    ModelRenderer Center3;
    ModelRenderer CenterDivider;
    ModelRenderer LeftCorner1;
    ModelRenderer LeftCorner2;
    ModelRenderer LeftCorner3;
    ModelRenderer LeftCorner1x2;
    ModelRenderer RightCorner1;
    ModelRenderer RightCorner2;
    ModelRenderer RightCorner3;
    ModelRenderer RightCorner1x2;
    ModelRenderer LeftFillT;
    ModelRenderer LeftFillB;
    ModelRenderer RightFillT;
    ModelRenderer RightFillB;
    ModelRenderer Stack1;
    ModelRenderer Stack2;
    ModelRenderer Stack3;
    ModelRenderer Stack4;
    ModelRenderer Stack5;
    ModelRenderer Window;
    ModelRenderer DoorFrame1;
    ModelRenderer DoorFrame2;
    ModelRenderer DoorFrame3;
    public ModelRenderer Hinge;
    ModelRenderer Handel;
  
  public ModelAlloyFurnace()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      Top = new ModelRenderer(this, 0, 16);
      Top.addBox(0F, 0F, 0F, 16, 1, 15);
      Top.setRotationPoint(-8F, 10F, -7F);
      Top.setTextureSize(128, 64);
      Top.mirror = true;
      setRotation(Top, 0F, 0F, 0F);
      Bottom = new ModelRenderer(this, 0, 0);
      Bottom.addBox(0F, 0F, 0F, 16, 1, 15);
      Bottom.setRotationPoint(-8F, 23F, -7F);
      Bottom.setTextureSize(128, 64);
      Bottom.mirror = true;
      setRotation(Bottom, 0F, 0F, 0F);
      Left = new ModelRenderer(this, 0, 32);
      Left.addBox(0F, 0F, 0F, 1, 12, 15);
      Left.setRotationPoint(-8F, 11F, -7F);
      Left.setTextureSize(128, 64);
      Left.mirror = true;
      setRotation(Left, 0F, 0F, 0F);
      Right = new ModelRenderer(this, 32, 32);
      Right.addBox(0F, 0F, 0F, 1, 12, 15);
      Right.setRotationPoint(7F, 11F, -7F);
      Right.setTextureSize(128, 64);
      Right.mirror = true;
      setRotation(Right, 0F, 0F, 0F);
      Back = new ModelRenderer(this, 84, 0);
      Back.addBox(0F, 0F, 0F, 14, 12, 8);
      Back.setRotationPoint(-7F, 11F, 0F);
      Back.setTextureSize(128, 64);
      Back.mirror = true;
      setRotation(Back, 0F, 0F, 0F);
      Center = new ModelRenderer(this, 47, 0);
      Center.addBox(0F, 0F, 0F, 14, 1, 7);
      Center.setRotationPoint(-7F, 18F, -7F);
      Center.setTextureSize(128, 64);
      Center.mirror = true;
      setRotation(Center, 0F, 0F, 0F);
      Center2 = new ModelRenderer(this, 60, 11);
      Center2.addBox(0F, 0F, 0F, 5, 2, 7);
      Center2.setRotationPoint(2F, 14F, -7F);
      Center2.setTextureSize(128, 64);
      Center2.mirror = true;
      setRotation(Center2, 0F, 0F, 0F);
      Center3 = new ModelRenderer(this, 60, 11);
      Center3.addBox(0F, 0F, 0F, 5, 2, 7);
      Center3.setRotationPoint(-7F, 14F, -7F);
      Center3.setTextureSize(128, 64);
      Center3.mirror = true;
      setRotation(Center3, 0F, 0F, 0F);
      CenterDivider = new ModelRenderer(this, 78, 20);
      CenterDivider.addBox(0F, 0F, 0F, 2, 4, 7);
      CenterDivider.setRotationPoint(-1F, 11F, -7F);
      CenterDivider.setTextureSize(128, 64);
      CenterDivider.mirror = true;
      setRotation(CenterDivider, 0F, 0F, 0F);
      LeftCorner1 = new ModelRenderer(this, 17, 39);
      LeftCorner1.addBox(0F, 0F, 0F, 1, 1, 7);
      LeftCorner1.setRotationPoint(1F, 11F, -7F);
      LeftCorner1.setTextureSize(128, 64);
      LeftCorner1.mirror = true;
      setRotation(LeftCorner1, 0F, 0F, 0F);
      LeftCorner2 = new ModelRenderer(this, 17, 39);
      LeftCorner2.addBox(0F, 0F, 0F, 1, 1, 7);
      LeftCorner2.setRotationPoint(-7F, 11F, -7F);
      LeftCorner2.setTextureSize(128, 64);
      LeftCorner2.mirror = true;
      setRotation(LeftCorner2, 0F, 0F, 0F);
      LeftCorner3 = new ModelRenderer(this, 17, 39);
      LeftCorner3.addBox(0F, 0F, 0F, 1, 1, 7);
      LeftCorner3.setRotationPoint(-5F, 19F, -7F);
      LeftCorner3.setTextureSize(128, 64);
      LeftCorner3.mirror = true;
      setRotation(LeftCorner3, 0F, 0F, 0F);
      LeftCorner1x2 = new ModelRenderer(this, 62, 20);
      LeftCorner1x2.addBox(0F, 0F, 0F, 1, 2, 7);
      LeftCorner1x2.setRotationPoint(-6F, 19F, -7F);
      LeftCorner1x2.setTextureSize(128, 64);
      LeftCorner1x2.mirror = true;
      setRotation(LeftCorner1x2, 0F, 0F, 0F);
      RightCorner1 = new ModelRenderer(this, 17, 39);
      RightCorner1.addBox(0F, 0F, 0F, 1, 1, 7);
      RightCorner1.setRotationPoint(-2F, 11F, -7F);
      RightCorner1.setTextureSize(128, 64);
      RightCorner1.mirror = true;
      setRotation(RightCorner1, 0F, 0F, 0F);
      RightCorner2 = new ModelRenderer(this, 17, 39);
      RightCorner2.addBox(0F, 0F, 0F, 1, 1, 7);
      RightCorner2.setRotationPoint(6F, 11F, -7F);
      RightCorner2.setTextureSize(128, 64);
      RightCorner2.mirror = true;
      setRotation(RightCorner2, 0F, 0F, 0F);
      RightCorner3 = new ModelRenderer(this, 17, 39);
      RightCorner3.addBox(0F, 0F, 0F, 1, 1, 7);
      RightCorner3.setRotationPoint(4F, 19F, -7F);
      RightCorner3.setTextureSize(128, 64);
      RightCorner3.mirror = true;
      setRotation(RightCorner3, 0F, 0F, 0F);
      RightCorner1x2 = new ModelRenderer(this, 62, 20);
      RightCorner1x2.addBox(0F, 0F, 0F, 1, 2, 7);
      RightCorner1x2.setRotationPoint(5F, 19F, -7F);
      RightCorner1x2.setTextureSize(128, 64);
      RightCorner1x2.mirror = true;
      setRotation(RightCorner1x2, 0F, 0F, 0F);
      LeftFillT = new ModelRenderer(this, 47, 22);
      LeftFillT.addBox(0F, 0F, 0F, 4, 2, 7);
      LeftFillT.setRotationPoint(-7F, 16F, -7F);
      LeftFillT.setTextureSize(128, 64);
      LeftFillT.mirror = true;
      setRotation(LeftFillT, 0F, 0F, 0F);
      LeftFillB = new ModelRenderer(this, 60, 32);
      LeftFillB.addBox(0F, 0F, 0F, 1, 4, 7);
      LeftFillB.setRotationPoint(-7F, 19F, -7F);
      LeftFillB.setTextureSize(128, 64);
      LeftFillB.mirror = true;
      setRotation(LeftFillB, 0F, 0F, 0F);
      RightFillT = new ModelRenderer(this, 47, 22);
      RightFillT.addBox(0F, 0F, 0F, 4, 2, 7);
      RightFillT.setRotationPoint(3F, 16F, -7F);
      RightFillT.setTextureSize(128, 64);
      RightFillT.mirror = true;
      setRotation(RightFillT, 0F, 0F, 0F);
      RightFillB = new ModelRenderer(this, 60, 32);
      RightFillB.addBox(0F, 0F, 0F, 1, 4, 7);
      RightFillB.setRotationPoint(6F, 19F, -7F);
      RightFillB.setTextureSize(128, 64);
      RightFillB.mirror = true;
      setRotation(RightFillB, 0F, 0F, 0F);
      Stack1 = new ModelRenderer(this, 82, 49);
      Stack1.addBox(0F, 0F, 0F, 10, 1, 10);
      Stack1.setRotationPoint(-5F, 9F, -4F);
      Stack1.setTextureSize(128, 64);
      Stack1.mirror = true;
      setRotation(Stack1, 0F, 0F, 0F);
      Stack2 = new ModelRenderer(this, 106, 47);
      Stack2.addBox(3F, 0F, 0F, 4, 1, 1);
      Stack2.setRotationPoint(-5F, 8F, 3F);
      Stack2.setTextureSize(128, 64);
      Stack2.mirror = true;
      setRotation(Stack1, 0F, 0F, 0F);
      Stack3 = new ModelRenderer(this, 92, 42);
      Stack3.addBox(0F, 0F, 0F, 1, 1, 6);
      Stack3.setRotationPoint(-3F, 8F, -2F);
      Stack3.setTextureSize(128, 64);
      Stack3.mirror = true;
      setRotation(Stack1, 0F, 0F, 0F);
      Stack4 = new ModelRenderer(this, 92, 42);
      Stack4.addBox(3F, 0F, 0F, 1, 1, 6);
      Stack4.setRotationPoint(-1F, 8F, -2F);
      Stack4.setTextureSize(128, 64);
      Stack4.mirror = true;
      setRotation(Stack1, 0F, 0F, 0F);
      Stack5 = new ModelRenderer(this, 106, 47);
      Stack5.addBox(3F, 0F, 0F, 4, 1, 1);
      Stack5.setRotationPoint(-5F, 8F, -2F);
      Stack5.setTextureSize(128, 64);
      Stack5.mirror = true;
      setRotation(Stack1, 0F, 0F, 0F);
      Window = new ModelRenderer(this, 64, 47);
      Window.addBox(-15F, -5F, -0.5F, 14, 12, 0);
      Window.setRotationPoint(8F, 16F, -7F);
      Window.setTextureSize(128, 64);
      Window.mirror = true;
      setRotation(Window, 0F, 0F, 0F);
      DoorFrame1 = new ModelRenderer(this, 96, 20);
      DoorFrame1.addBox(-15F, -6F, -1F, 14, 1, 1);
      DoorFrame1.setRotationPoint(8F, 16F, -7F);
      DoorFrame1.setTextureSize(128, 64);
      DoorFrame1.mirror = true;
      setRotation(DoorFrame1, 0F, 0F, 0F);
      DoorFrame2 = new ModelRenderer(this, 96, 20);
      DoorFrame2.addBox(-15F, 7F, -1F, 14, 1, 1);
      DoorFrame2.setRotationPoint(8F, 16F, -7F);
      DoorFrame2.setTextureSize(128, 64);
      DoorFrame2.mirror = true;
      setRotation(DoorFrame2, 0F, 0F, 0F);
      DoorFrame3 = new ModelRenderer(this, 96, 22);
      DoorFrame3.addBox(-16F, -6F, -1F, 1, 14, 1);
      DoorFrame3.setRotationPoint(8F, 16F, -7F);
      DoorFrame3.setTextureSize(128, 64);
      DoorFrame3.mirror = true;
      setRotation(DoorFrame3, 0F, 0F, 0F);
      Hinge = new ModelRenderer(this, 96, 22);
      Hinge.addBox(-1F, -6F, -1F, 1, 14, 1);
      Hinge.setRotationPoint(8F, 16F, -7F);
      Hinge.setTextureSize(128, 64);
      Hinge.mirror = true;
      setRotation(Hinge, 0F, 0F, 0F);
      Handel = new ModelRenderer(this, 100, 22);
      Handel.addBox(-16F, -1.977778F, -2F, 1, 3, 1);
      Handel.setRotationPoint(8F, 16F, -7F);
      Handel.setTextureSize(128, 64);
      Handel.mirror = true;
      setRotation(Handel, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Top.render(f5);
    Bottom.render(f5);
    Left.render(f5);
    Right.render(f5);
    Back.render(f5);
    Center.render(f5);
    Center2.render(f5);
    Center3.render(f5);
    CenterDivider.render(f5);
    LeftCorner1.render(f5);
    LeftCorner2.render(f5);
    LeftCorner3.render(f5);
    LeftCorner1x2.render(f5);
    RightCorner1.render(f5);
    RightCorner2.render(f5);
    RightCorner3.render(f5);
    RightCorner1x2.render(f5);
    LeftFillT.render(f5);
    LeftFillB.render(f5);
    RightFillT.render(f5);
    RightFillB.render(f5);
    Stack1.render(f5);
    Stack1.render(f5);
    Stack1.render(f5);
    Stack1.render(f5);
    Stack1.render(f5);
    Window.render(f5);
    DoorFrame1.render(f5);
    DoorFrame2.render(f5);
    DoorFrame3.render(f5);
    Hinge.render(f5);
    Handel.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

	

	public void renderAll() {
		DoorFrame1.rotateAngleY = Hinge.rotateAngleY;
		DoorFrame2.rotateAngleY = DoorFrame1.rotateAngleY;
		DoorFrame3.rotateAngleY = DoorFrame2.rotateAngleY;
		Handel.rotateAngleY = DoorFrame3.rotateAngleY;
		Window.rotateAngleY = Handel.rotateAngleY;
		
		Top.render(0.0625F);
		Bottom.render(0.0625F);
		Left.render(0.0625F);
		Right.render(0.0625F);
		Back.render(0.0625F);
		Center.render(0.0625F);
		Center2.render(0.0625F);
		Center3.render(0.0625F);
		CenterDivider.render(0.0625F);
		LeftCorner1.render(0.0625F);
		LeftCorner2.render(0.0625F);
		LeftCorner3.render(0.0625F);
		LeftCorner1x2.render(0.0625F);
		RightCorner1.render(0.0625F);
		RightCorner2.render(0.0625F);
		RightCorner3.render(0.0625F);
		RightCorner1x2.render(0.0625F);
		LeftFillT.render(0.0625F);
		LeftFillB.render(0.0625F);
		RightFillT.render(0.0625F);
		RightFillB.render(0.0625F);
		Stack1.render(0.0625F);
		Stack2.render(0.0625F);
		Stack3.render(0.0625F);
		Stack4.render(0.0625F);
		Stack5.render(0.0625F);
		Window.render(0.0625F);
		DoorFrame1.render(0.0625F);
		DoorFrame2.render(0.0625F);
		DoorFrame3.render(0.0625F);
		Handel.render(0.0625F);
		Hinge.render(0.0625F);

		
	}

}
